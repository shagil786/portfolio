// Initialising the canvas
let canvas = document.getElementById("homeIntro");
let ctx = canvas.getContext("2d");
let count = 0;

// Setting the width and height of the canvas
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

// Setting up the letters
var letters =
  "0110101110001001101000010101111111010010010100111111100000001100000010111001110110100010010011100110101";
letters = letters.split("");

// Setting up the columns
var fontSize = 10,
  columns = canvas.width / fontSize;

// Setting up the drops
var drops = [];
for (var i = 0; i < columns; i++) {
  drops[i] = 1;
}

// Setting up the draw function
function draw() {
  ctx.fillStyle = "rgba(0, 0, 0, .1)";
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  for (var i = 0; i < drops.length; i++) {
    var text = letters[Math.floor(Math.random() * letters.length)];
    ctx.fillStyle = "#0f0";
    ctx.fillText(text, i * fontSize, drops[i] * fontSize);
    drops[i]++;
    if (drops[i] * fontSize > canvas.height && Math.random() > 0.95) {
      drops[i] = 0;
    }
  }
}

// Loop the animation
setInterval(draw, 33);

function change(e, fun) {
  e.preventDefault();
  switch (fun) {
    case "+":
      count = (count + 1) % 4;
      break;
    case "-":
      count = (count - 1) % 4;
  }

  count = count >= 0 ? Math.abs(count) : 4 + count;
}

document
  .querySelector(".left-arrow")
  .addEventListener("click", (e) => change(e, "-"));

document
  .querySelector(".right-arrow")
  .addEventListener("click", (e) => change(e, "+"));

const carouselText = [
  { text: "Open Source Contributor", color: "#14e956" },
  { text: "Software Developer", color: "#ffffff" },
  { text: "Freelancer", color: "#14e956" },
  { text: "A FullStack Developer", color: "#ffffff" },
];

const about = document.querySelector(".about-content");
carousel(carouselText, about);

async function typeSentence(sentence, eleRef, delay = 100) {
  const letters = sentence.split("");
  let i = 0;
  while (i < letters.length) {
    await waitForMs(delay);
    eleRef.innerHTML += letters[i];
    i++;
  }
  return;
}

async function deleteSentence(eleRef) {
  const sentence = eleRef.innerHTML;
  const letters = sentence.split("");
  let i = 0;
  while (letters.length > 0) {
    await waitForMs(100);
    letters.pop();
    eleRef.innerHTML = letters.join("");
  }
}

async function carousel(carouselList, eleRef) {
  var i = 0;
  while (true) {
    updateFontColor(eleRef, carouselList[i].color);
    await typeSentence(carouselList[i].text, eleRef);
    await waitForMs(1500);
    await deleteSentence(eleRef);
    await waitForMs(500);
    i++;
    if (i >= carouselList.length) {
      i = 0;
    }
  }
}

function updateFontColor(eleRef, color) {
  eleRef.style.color = color;
}

function waitForMs(ms) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}

const text = document.querySelector(".content-secondary p");
text.innerHTML = text.textContent
  .split("")
  .map((letter) => `<span>${letter}</span>`)
  .join("");

const projectData = [
  {
    imageSrc: "assets/Images/cedarImage.png",
    title: "Cedar String Landing Page",
    description:
      "This is a Landing Page for one of the projects in Bangalore done by me in Vanilla JavaScript, HTML5, and CSS3. Find source code on my GitHub.",
    stack: "Vanilla JS",
    url: "https://shagilhmx.github.io/cedarString/",
  },
];

// Function to populate project details
function populateProjectDetails(data) {
  document.getElementById("projectImage").src = data.imageSrc;
  document.getElementById("projectTitle").textContent = data.title;
  document.getElementById("projectDescription").textContent = data.description;
  document.getElementById("projectStack").textContent = data.stack;
  document.getElementById("projectUrl").href = data.url;
}

function funCal() {
  for (let i = 0; i < projectData?.length; i++) {
    populateProjectDetails(projectData[i]);
  }
}

window.addEventListener("load", () => {
  funCal();
});
